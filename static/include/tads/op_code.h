#ifndef OP_CODE_H_
#define OP_CODE_H_

typedef enum
{
	UNDEFINED,
	INSTRUCTIONS,
	EXIT_CONSOLE,
	PROCESS_INIT_REQUEST,
	PROCESS_INIT_RESPONSE,
	PROCESS_SUSPEND_REQUEST,
	PROCESS_SUSPEND_RESPONSE,
	PROCESS_KILL_REQUEST,
	PROCESS_KILL_RESPONSE,
	GET_MEMORY_CONFIG_REQUEST,
	GET_MEMORY_CONFIG_RESPONSE,
	GET_SECOND_LEVEL_TABLE_REQUEST,
	GET_SECOND_LEVEL_TABLE_RESPONSE,
	GET_FRAME_READ_REQUEST,
	GET_FRAME_READ_RESPONSE,
	GET_FRAME_WRITE_REQUEST,
	GET_FRAME_WRITE_RESPONSE,
	WRITE_MEMORY_REQUEST,
	WRITE_MEMORY_RESPONSE,
	READ_MEMORY_REQUEST,
	READ_MEMORY_RESPONSE,
	PCB,
	EXECUTE_PROCESS,
	INTERRUPT_PROCESS,
	END_PROCESS,
	DEBUGGING,
	PROCESO,
	REQ_PCB_A_EJECUTAR_KERNEL_CPU,
	PCB_EJECUTADO_IO_CPU_KERNEL,
	PCB_EJECUTADO_EXIT_CPU_KERNEL,
	PCB_EJECUTADO_INTERRUPCION_CPU_KERNEL,
	REQ_INTERRUPCION_KERNEL_CPU, //HILO INTERRUPT
	RES_INTERRUPCION_CPU_KERNEL, //HILO DISPATCH
	REQ_TRADUCCION_DIRECCIONES_CPU_MEMORIA,
	RES_TRADUCCION_DIRECCIONES_MEMORIA_CPU,
	REQ_DATO_DIRECCION_LOGICA_CPU_MEMORIA,
	REQ_READ_CPU_MEMORIA,
	RES_READ_MEMORIA_CPU,
	REQ_WRITE_CPU_MEMORIA,
	RES_WRITE_CPU_MEMORIA,
	REQ_MARCO_ESCRITURA_CPU_MEMORIA,
	REQ_MARCO_LECTURA_CPU_MEMORIA,
	RES_MARCO_MEMORIA_CPU,
	REQ_CREAR_PROCESO_KERNEL_MEMORIA,
	RES_CREAR_PROCESO_KERNEL_MEMORIA,
	REQ_TABLA_SEGUNDO_NIVEL_CPU_MEMORIA,
	RES_TABLA_SEGUNDO_NIVEL_MEMORIA_CPU,
	RES_FIN_PROCESO_KERNEL_CONSOLA,
	REQ_FIN_PROCESO_KERNEL_MEMORIA,
	REQ_SUSP_PROCESO_KERNEL_MEMORIA,
	RES_SUSP_PROCESO_KERNEL_MEMORIA,
	REQ_DESUSP_PROCESO_KERNEL_MEMORIA,
	ALGO
}t_op_code;

#endif
